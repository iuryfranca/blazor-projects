@page "/cadastro-multas"
@using LearningBlazor.Models;
@using LearningBlazor.Services;
@inject VeiculoController veiculoController;
@inject MultaController multaController;
@inject NavigationManager navegacao;

<h3>REGISTRO DE MULTAS DE VEÍCULOS COM CADASTRO</h3>

<div class="container">
  <nav class="navbar navbar-light" style="background-color: white"></nav>

  <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

  <label for="veiculo" class="form-label">CARROS CADASTRADOS:</label>
  <select class="form-select" aria-label="Selecione um carro" @onchange="SelecionarVeiculo">
    <option selected>Selecione uma placa</option>
    @foreach (var item in listaVeiculos)
    {
      <option value=@item.Id>@item.Modelo</option>
    }
  </select>

  <nav class="navbar navbar-light" style="background-color: white"></nav>

  <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

  <div class="mb-3">
    <label for="exampleFormControlInput1" class="form-label">MODELO:</label>
    <input @bind="@veiculo.Modelo" type="text" class="form-control" id="exampleFormControlInput1"
      disable="@campoBloqueado">
  </div>

  <div class="mb-3">
    <label for="exampleFormControlInput1" class="form-label">MARCA:</label>
    <input @bind="@veiculo.Marca" type="text" class="form-control" id="exampleFormControlInput1"
      disable="@campoBloqueado">
  </div>

  <div class="mb-3">
    <label for="exampleFormControlInput1" class="form-label">PLACA:</label>
    <input @bind="@veiculo.Placa" type="text" class="form-control" id="exampleFormControlInput1"
      disable="@campoBloqueado">
  </div>
  <nav class="navbar navbar-light" style="background-color: white"></nav>

  <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

  <nav class="navbar navbar-light" style="background-color: white"></nav>

  <div class="mb-3">
    <label for="exampleFormControlInput1" class="form-label">DESCRIÇÃO:</label>
    <input @bind="@Descricao" type="text" class="form-control" id="exampleFormControlInput1" disable="@campoBloqueado">
  </div>
  <div class="mb-3">
    <label for="exampleFormControlInput1" class="form-label">VALOR :</label>
    <input @bind="@ValorMulta" type="number" class="form-control" id="exampleFormControlInput1"
      disable="@campoBloqueado">
  </div>
  @if (enabledButton)
  {
    <button type="button" class="btn btn-primary" @onclick="AdicionarMulta">ADICIONAR</button>
    <button type="button" class="btn btn-warning" @onclick="Cancelar">CANCELAR</button>
    <button type="button" class="btn btn-success" @onclick="SalvarMulta">SALVAR</button>
  }
  else
  {
    <div class="alert alert-success" role="alert">
      Salvo com Sucesso;
    </div>
    <button type="button" class="btn btn-primary">NOVO REGISTRO</button>
  }

  <nav class="navbar navbar-light" style="background-color: white"></nav>

  <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>

  <nav class="navbar navbar-light" style="background-color: white"></nav>

  <table class="table">
    <thead>
      <tr>
        <th>Descrição:</th>
        <th>Valor:</th>
      </tr>
    </thead>
    <tbody>
      @foreach (var multa in listaMultas)
      {
        <tr>
          <td>@multa.Descricao</td>
          <td>R$ @FormatValue(@multa.ValorMulta.Value)</td>
        </tr>
      }
    </tbody>
  </table>
</div>


@code {
  List<Multa> listaMultas = new List<Multa>();
  List<Veiculo> listaVeiculos = new List<Veiculo>();
  Veiculo veiculo = new Veiculo();
  public string Descricao { get; set; }
  public decimal ValorMulta { get; set; }
  private bool campoBloqueado = false;
  private bool enabledButton = true;

  protected override async Task OnInitializedAsync()
  {
    listaVeiculos = await veiculoController.GetVeiculos();
  }

  private void SelecionarVeiculo(ChangeEventArgs e)
  {
    var id = Convert.ToInt32(e.Value);
    veiculo = listaVeiculos.FirstOrDefault(x => x.Id == id);
    listaMultas = veiculo.Multas.ToList();
  }

  private void AdicionarMulta()
  {
    Multa multa = new Multa();
    multa.Descricao = Descricao;
    multa.ValorMulta = ValorMulta;
    multa.Veiculo = veiculo;

    listaMultas.Add(multa);

    Descricao = string.Empty;
    ValorMulta = 0;
  }

  private async Task SalvarMulta()
  {
    var listaMultaBd = await multaController.GetMultas();
    var listaMultasToSave = listaMultas.Where(x => !listaMultaBd.Any(y => y.Descricao == x.Descricao)).ToList();

    await multaController.AddRangeMultas(listaMultasToSave);
    enabledButton = false;
    campoBloqueado = true;
  }

  private void NovoRegistro()
  {
    listaMultas.Clear();
    listaVeiculos.Clear();
    veiculo = new Veiculo();

    Descricao = string.Empty;
    ValorMulta = 0;

    enabledButton = true;
    campoBloqueado = false;
  }

  private void Cancelar()
  {
    NovoRegistro();
  }

  private string FormatValue(decimal value)
  {
    return value.ToString("N2");
  }
}