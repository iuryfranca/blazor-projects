@page "/inscricao-candidato"
@using AppConcurso.Models;
@using AppConcurso.Services;
@inject CargoService cargoService;
@inject CandidatoService candidatoService;
@inject InscricaoService inscricaoService;
@inject NavigationManager navegacao;

<h3>INSCRIÇÃO DE CANDIDATO</h3>

<div class="container">
    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
    <div class="row align-items-start">
        <div class="col">
            <div class="form-group">
                <label for="input-datalist" class="form-label">Selecionar Candidato</label>
                <input type="text" class="form-control" placeholder="Buscar" list="lista-pessoas"
                    @onchange="SelecionarCandidatos">
                <datalist id="lista-pessoas">
                    @foreach (var item in listaCandidatos)
                    {
                        <option value="@item.Cpf">@item.Nome</option>
                    }
                </datalist>
            </div>
        </div>
        <div class="col">
            <div class="form-group">
                <label for="veiculo" class="form-label">Cargos:</label>
                <select @onchange="SelecionarCargos" class="form-select" aria-label="Selecione um Cargo">
                    <option selected>Selecione um cargo</option>
                    @foreach (var item in listCargos)
                    {
                        <option value=@item.Id>@item.NomeCargo</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <nav class="navbar navbar-light" style="background-color: white"></nav>

    <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
    <div class="col align-items-start">
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">NOME:</label>
                <input @bind="candidato.Nome" type="text" disabled class="form-control" id="exampleFormControlInput1">
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">CPF:</label>
                <input @bind="candidato.Cpf" type="text" disabled class="form-control" id="exampleFormControlInput1">
            </div>
        </div>
        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">CARGO:</label>
                <input @bind="cargo.NomeCargo" type="text" disabled class="form-control" id="exampleFormControlInput1">
            </div>
        </div>

        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">Nota de Conhecimento Gerais:</label>
                <input @bind="notaConhecimentoGerais" type="text" class="form-control" id="exampleFormControlInput1">
            </div>
        </div>

        <div class="col">
            <div class="mb-3">
                <label for="exampleFormControlInput1" class="form-label">Nota de Conhecimentos Especificos:</label>
                <input @bind="notaConhecimentoEspecificos" type="text" class="form-control"
                    id="exampleFormControlInput1">
            </div>
        </div>

    </div>

    @if (enabledButton)
    {
        <button type="button" class="btn btn-warning" @onclick="CancelarInscricao">CANCELAR</button>
        <button type="button" class="btn btn-success" @onclick="NovaInscricao">SALVAR</button>
    }
    else
    {
        <div class="alert alert-success" role="alert">
            Inscrição realizada com sucesso! (Número: @numeroInsc);
        </div>
        <button type="button" class="btn btn-primary" @onclick="CancelarInscricao">NOVA INSCRIÇÃO</button>
    }
</div>


@code {
    private Double valorTotal = 0;

    private Cargo cargo = new Cargo();

    private List<Cargo> listCargos = new List<Cargo>();

    private Candidato candidato = new Candidato();

    private List<Candidato> listaCandidatos = new List<Candidato>();

    private List<Inscricao> listaInscricoes = new List<Inscricao>();

    private bool enabledButton = true;

    private string numeroInsc = "";

    private double notaConhecimentoGerais = 0.0;

    private double notaConhecimentoEspecificos = 0.0;

    protected override async Task OnInitializedAsync()
    {
        listCargos = await cargoService.GetCargos();
        listaCandidatos = await candidatoService.GetCandidatos();
        listaInscricoes = await inscricaoService.GetInscricoes();
    }

    private async Task SelecionarCargos(ChangeEventArgs e)
    {
        var id = Int32.Parse(e.Value.ToString());

        cargo = await cargoService.GetCargoById(id);

    }

    private async Task SelecionarCandidatos(ChangeEventArgs e)
    {
        var cpf = e.Value.ToString();

        candidato = await candidatoService.GetCandidatosByCpf(cpf);
    }

    private async Task NovaInscricao()
    {
        await inscricaoService.UpdateRange(listaInscricoes);


        var novaInscricao = new Inscricao();

        novaInscricao.CargoId = cargo.Id;
        novaInscricao.CandidatoId = candidato.Id;
        novaInscricao.NotaConhGerais = notaConhecimentoGerais;
        novaInscricao.NotaConhEspecificos = notaConhecimentoEspecificos;
        novaInscricao.DataInscricao = DateTime.Now;
        novaInscricao.NumeroInsc = (listaInscricoes.Count + 1).ToString();

        try
        {
            var newIncricao = await inscricaoService.CreateInscricao(novaInscricao);

            numeroInsc = newIncricao.NumeroInsc;
            enabledButton = false;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private async Task CancelarInscricao()
    {
        navegacao.NavigateTo("/inscricao-candidato", forceLoad: true);
    }
}
