@page "/consulta"
@using LearningBlazor.Models
@using LearningBlazor.Services
@inject PessoaService pessoaService
@inject NavigationManager navegacao

<h3>Consultas</h3>

<div class="container">
  <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
  <div class="form-group">
    <label for="input-datalist">Buscar</label>
    <input type="text" class="form-control" placeholder="Buscar" list="lista-pessoas" @onchange="SelecionarPessoaByCPF">
    <datalist id="lista-pessoas">
      @foreach (var item in pessoas)
      {
        <option value="@item?.Cpf">@item?.Cpf</option>
      }
    </datalist>
  </div>
  <nav class="navbar navbar-light" style="background-color: white"></nav>
  <nav class="navbar navbar-light" style="background-color: darkgreen"></nav>
  <nav class="navbar navbar-light" style="background-color: white"></nav>
  <div class="mb-3">
    <label for="exampleFormControlInput1" class="form-label">NOME:</label>
    <input @bind="pessoa.Nome" type="text" class="form-control" id="exampleFormControlInput1"
      disabled="@campoBloqueado">
  </div>
  <div class="row align-items-start">
    <div class="col">
      <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">CPF:</label>
        <input @bind="pessoa.Cpf" type="text" class="form-control" id="exampleFormControlInput2"
          disabled="@campoBloqueado">
      </div>
    </div>
    <div class="col">
      <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">DATA DE NASCIMENTO:</label>
        <input @bind="pessoa.DataNasc" type="date" class="form-control" id="exampleFormControlInput2"
          disabled="@campoBloqueado">
      </div>
    </div>
    <div class="col">
      <div class="mb-3">
        <label for="exampleFormControlInput1" class="form-label">TELEFONE:</label>
        <input @bind="pessoa.Telefone" type="tel" class="form-control" id="exampleFormControlInput2"
          disabled="@campoBloqueado">
      </div>
    </div>
  </div>
</div>

@code {
  private Pessoa pessoa = new Pessoa();
  private List<Pessoa> pessoas = new List<Pessoa>();
  private bool campoBloqueado = true;

  protected override async Task OnInitializedAsync()
  {
    pessoas = await pessoaService?.GetAllPessoas();
  }

  public void SelecionarPessoaByCPF(ChangeEventArgs e)
  {
    var cpf = e.Value.ToString();
    pessoa = pessoas.Where(p => p.Cpf == cpf).FirstOrDefault();
    campoBloqueado = true;
  }


}